"""
Author: Wenhua Yang
Date: 09/18/2016

A typical authorization api for external use(tests code). Used for granting
the the authority of further resources visiting, e.g. use search api requires
a token generated by this auth_api.
"""

from flask import Flask, jsonify
import os

from authapi.provider import AuthService

application = Flask(__name__)

auth_service_url = os.environ.get('AUTH_SERVICE_URL', None)
assert auth_service_url is not None, \
    'Environment variable AUTH_SERVICE_URL not found'

application.config.update(dict(
    AUTH_SERVICE_URL=auth_service_url
))

auth_service = AuthService(application)


@application.route("/token/<client_id>/<secret>")
def get_token(client_id, secret):
    """Generate token for user by calling auth_service.

    Parameters
    ----------
    client_id: string
        caller's id, a designated id for caller.
    secret: string
        a secret string corresponding with client_id.

    Returns
    -------
    return a json.
    """

    result = auth_service.get_token(client_id, secret)
    return jsonify(result)
